function PanelFillService_ ($q, $window, OlService, MapService) {
  // this Service provides styles, etc for edlOlMap features
  var PanelFillService = {};


  PanelFillService.sample = 
 //  {"0":[
	// [
	// 	[-122.2673599891102,37.483443610459965],
	// 	[-122.26734402107655,37.483451518440447],
	// 	[-122.26733871563542,37.483444772643665],
	// 	[-122.26735468366822,37.4834368646639],
	// ],
	// [
	// 	[-122.26734402107655,37.483451518440447],[-122.26732805303951,37.483459426418776],[-122.26732274759928,37.483452680621284],[-122.26733871563542,37.483444772643665]],[[-122.26732805303951,37.483459426418776],[-122.26731208499909,37.483467334394952],[-122.26730677955972,37.483460588596749],[-122.26732274759928,37.483452680621284]],[[-122.26731208499909,37.483467334394952],[-122.26729611695528,37.483475242368989],[-122.2672908115168,37.483468496570062],[-122.26730677955972,37.483460588596749]],[[-122.26729611695528,37.483475242368989],[-122.26728014890809,37.483483150340867],[-122.26727484347049,37.483476404541243],[-122.2672908115168,37.483468496570062]],[[-122.26728014890809,37.483483150340867],[-122.26726418085754,37.483491058310605],[-122.26725887542081,37.483484312510249],[-122.26727484347049,37.483476404541243]],[[-122.26737065169762,37.483428956681983],[-122.26735468366822,37.4834368646639],[-122.26734937822717,37.483430118867595],[-122.26736534625569,37.483422210886388]],[[-122.26735468366822,37.4834368646639],[-122.26733871563542,37.483444772643665],[-122.26733341019526,37.483438026846656],[-122.26734937822717,37.483430118867595]],[[-122.26733871563542,37.483444772643665],[-122.26732274759928,37.483452680621284],[-122.26731744215998,37.48344593482355],[-122.26733341019526,37.483438026846656]],[[-122.26732274759928,37.483452680621284],[-122.26730677955972,37.483460588596749],[-122.26730147412131,37.483453842798305],[-122.26731744215998,37.48344593482355]],[[-122.26730677955972,37.483460588596749],[-122.2672908115168,37.483468496570062],[-122.26728550607928,37.4834617507709],[-122.26730147412131,37.483453842798305]],[[-122.2672908115168,37.483468496570062],[-122.26727484347049,37.483476404541243],[-122.26726953803384,37.483469658741356],[-122.26728550607928,37.4834617507709]],[[-122.26727484347049,37.483476404541243],[-122.26725887542081,37.483484312510249],[-122.26725356998504,37.483477566709659],[-122.26726953803384,37.483469658741356]],[[-122.26738131428084,37.48341430290305],[-122.26736534625569,37.483422210886388],[-122.26736004081474,37.483415465090566],[-122.26737600883898,37.483407557107924]],[[-122.26736534625569,37.483422210886388],[-122.26734937822717,37.483430118867595],[-122.26734407278708,37.483423373071055],[-122.26736004081474,37.483415465090566]],[[-122.26734937822717,37.483430118867595],[-122.26733341019526,37.483438026846656],[-122.26732810475605,37.483431281049391],[-122.26734407278708,37.483423373071055]],[[-122.26733341019526,37.483438026846656],[-122.26731744215998,37.48344593482355],[-122.26731213672164,37.483439189025567],[-122.26732810475605,37.483431281049391]],[[-122.26731744215998,37.48344593482355],[-122.26730147412131,37.483453842798305],[-122.26729616868387,37.483447096999619],[-122.26731213672164,37.483439189025567]],[[-122.26730147412131,37.483453842798305],[-122.26728550607928,37.4834617507709],[-122.2672802006427,37.483455004971511],[-122.26729616868387,37.483447096999619]],[[-122.26728550607928,37.4834617507709],[-122.26726953803384,37.483469658741356],[-122.26726423259817,37.483462912941249],[-122.2672802006427,37.483455004971511]],[[-122.26726953803384,37.483469658741356],[-122.26725356998504,37.483477566709659],[-122.26724826455023,37.483470820908842],[-122.26726423259817,37.483462912941249]],[[-122.26739197685986,37.48339964912315],[-122.26737600883898,37.483407557107924],[-122.2673707033981,37.483400811312578],[-122.26738667141809,37.483392903328522]],[[-122.26737600883898,37.483407557107924],[-122.26736004081474,37.483415465090566],[-122.2673547353747,37.4834087192945],[-122.2673707033981,37.483400811312578]],[[-122.26736004081474,37.483415465090566],[-122.26734407278708,37.483423373071055],[-122.26733876734794,37.483416627274273],[-122.2673547353747,37.4834087192945]],[[-122.26734407278708,37.483423373071055],[-122.26732810475605,37.483431281049391],[-122.2673227993178,37.4834245352519],[-122.26733876734794,37.483416627274273]],[[-122.26732810475605,37.483431281049391],[-122.26731213672164,37.483439189025567],[-122.26730683128429,37.483432443227372],[-122.2673227993178,37.4834245352519]],[[-122.26731213672164,37.483439189025567],[-122.26729616868387,37.483447096999619],[-122.26729086324737,37.483440351200692],[-122.26730683128429,37.483432443227372]],[[-122.26729616868387,37.483447096999619],[-122.2672802006427,37.483455004971511],[-122.26727489520709,37.483448259171873],[-122.26729086324737,37.483440351200692]],[[-122.2672802006427,37.483455004971511],[-122.26726423259817,37.483462912941249],[-122.26725892716343,37.483456167140893],[-122.26727489520709,37.483448259171873]],[[-122.26726423259817,37.483462912941249],[-122.26724826455023,37.483470820908842],[-122.26724295911637,37.483464075107776],[-122.26725892716343,37.483456167140893]],[[-122.26740263943472,37.483384995342291],[-122.26738667141809,37.483392903328522],[-122.26738136597727,37.483386157533637],[-122.26739733399302,37.483378249548124]],[[-122.26738667141809,37.483392903328522],[-122.2673707033981,37.483400811312578],[-122.26736539795817,37.483394065516983],[-122.26738136597727,37.483386157533637]],[[-122.2673707033981,37.483400811312578],[-122.2673547353747,37.4834087192945],[-122.26734942993565,37.4834019734982],[-122.26736539795817,37.483394065516983]],[[-122.2673547353747,37.4834087192945],[-122.26733876734794,37.483416627274273],[-122.26733346190976,37.483409881477257],[-122.26734942993565,37.4834019734982]],[[-122.26733876734794,37.483416627274273],[-122.2673227993178,37.4834245352519],[-122.2673174938805,37.483417789454165],[-122.26733346190976,37.483409881477257]],[[-122.2673227993178,37.4834245352519],[-122.26730683128429,37.483432443227372],[-122.26730152584787,37.48342569742892],[-122.2673174938805,37.483417789454165]],[[-122.26730683128429,37.483432443227372],[-122.26729086324737,37.483440351200692],[-122.26728555781185,37.48343360540153],[-122.26730152584787,37.48342569742892]],[[-122.26729086324737,37.483440351200692],[-122.26727489520709,37.483448259171873],[-122.26726958977244,37.483441513372],[-122.26728555781185,37.48343360540153]],[[-122.26727489520709,37.483448259171873],[-122.26725892716343,37.483456167140893],[-122.26725362172965,37.483449421340318],[-122.26726958977244,37.483441513372]],[[-122.26725892716343,37.483456167140893],[-122.26724295911637,37.483464075107776],[-122.26723765368349,37.483457329306482],[-122.26725362172965,37.483449421340318]],[[-122.26724295911637,37.483464075107776],[-122.26722699106595,37.483471983072512],[-122.26722168563393,37.483465237270494],[-122.26723765368349,37.483457329306482]],
 //  ]};
  {"0":[[[-122.26738126703643,37.483442928542537],[-122.26739036860511,37.483429854505623],[-122.2673991399386,37.4834336995205],[-122.26739003837099,37.4834467735581]],[[-122.26739003837099,37.4834467735581],[-122.2673991399386,37.4834336995205],[-122.26740791127301,37.483437544534752],[-122.26739880970646,37.483450618573016]],[[-122.26739880970646,37.483450618573016],[-122.26740791127301,37.483437544534752],[-122.26741668260834,37.483441389548339],[-122.26740758104285,37.483454463587265]],[[-122.26740758104285,37.483454463587265],[-122.26741668260834,37.483441389548339],[-122.26742545394454,37.483445234561273],[-122.26741635238011,37.483458308600881]],[[-122.26741635238011,37.483458308600881],[-122.26742545394454,37.483445234561273],[-122.26743422528168,37.483449079573568],[-122.26742512371831,37.483462153613857]],[[-122.26742512371831,37.483462153613857],[-122.26743422528168,37.483449079573568],[-122.26744299661968,37.483452924585208],[-122.26743389505738,37.483465998626158]],[[-122.26743389505738,37.483465998626158],[-122.26744299661968,37.483452924585208],[-122.26745176795859,37.4834567695962],[-122.26744266639736,37.483469843637835]]]};
//   {"0":[[[-122.26742704433559, 37.48315520675591],
// [-122.2671212725079, 37.482953007690064],
// [-122.26629246992229, 37.483606429934426],
// [-122.26657946628688, 37.483855454047095],
// [-122.26710786146282, 37.48354470600906]]]};








  // well known text format utility
  wkt = OlService.wkt;

  /* 
   * functions we use
   */





  PanelFillService.processFeatures = function(features){
  	for (var idx in features) {
			console.log(features[idx]);
  		features[idx].forEach(PanelFillService.pointsToLatLng);
  		
  	}
  };

	PanelFillService.pointsToLatLng = function(point_string, featIdx, featCollection) {
		//TODO: is it a problem that browser zoom impacts these numbers?
		console.log(point_string);
		var pt_xy	= point_string.split(' ');
		var result = [];

		var north_edge, south_edge, east_edge, west_edge, pixelHeight, pixelWidth;
		north_edge = 0;
		west_edge  = 0;
		east_edge  = $window.innerWidth;
		south_edge = OlService.mapDiv.clientHeight;
		pixelWidth = $window.innerWidth;
		pixelHeight = OlService.mapDiv.clientHeight;
		var mapCornerExtent;
		mapCornerExtent = MapService.g.bounds ? MapService.g.bounds : [0, 0, $window.innerWidth, OlService.mapDiv.clientHeight ];
		var pixelExtentXY01 = [0, 0, $window.innerWidth, OlService.mapDiv.clientHeight ];
		var enws_deg_extent = [];
		if (!Array.isArray(mapCornerExtent)) { //TODO: ?? extract this to MapService
			north_edge = mapCornerExtent.getNorthEast().lat();
			south_edge = mapCornerExtent.getSouthWest().lat();
			east_edge  = mapCornerExtent.getNorthEast().lng();
			west_edge  = mapCornerExtent.getSouthWest().lng();
			enws_deg_extent = [
				mapCornerExtent.getNorthEast().lng(), // degX0 east_edge
				mapCornerExtent.getNorthEast().lat(), // degY0 north_edge
				mapCornerExtent.getSouthWest().lng(), // degX1 west_edge
				mapCornerExtent.getSouthWest().lat(), // degY1 south_edge
			];
		} else {
			enws_deg_extent = mapCornerExtent;
		}

		// map measure in degrees
		var e_mapsize = Math.abs(east_edge - west_edge);
		var n_mapsize = Math.abs(north_edge - south_edge);
		var en_mapsize = [e_mapsize, n_mapsize];

		// ratio pixels on map : degrees on map = px/dg
		var px_per_e = pixelWidth  / e_mapsize;
		var px_per_n = pixelHeight / n_mapsize;
		var px_per_en = [px_per_e, px_per_n];


		function north_pt(pt_y) {

			return south_edge + pt_y / px_per_n;
		}

		function east_pt(pt_x) {
			return west_edge + pt_x / px_per_e;
		}

		function point_machine(pt_xy){
			return [east_pt(pt_xy[0]), north_pt(pt_xy[1])];
		}
		console.log(point_machine(pt_xy));

  };

  // turn json into WKT ==> POLYGON((159 569,541 576,554 286,193 271,159 569)) 
	PanelFillService.panelFromJson = function(array_of_points){
		var feature_to_return;
		var pts = array_of_points;
		var north_edge, south_edge, east_edge, west_edge, pixelHeight, pixelWidth;
		north_edge = 0;
		west_edge  = 0;
		east_edge  = $window.innerWidth;
		south_edge = OlService.mapDiv.clientHeight;
		pixelWidth = $window.innerWidth;
		pixelHeight = OlService.mapDiv.clientHeight;

		var mapCornerExtent;
		mapCornerExtent = MapService.g.bounds ? MapService.g.bounds : [0, 0, $window.innerWidth, OlService.mapDiv.clientHeight ];
		var pixelExtentXY01 = [0, 0, $window.innerWidth, OlService.mapDiv.clientHeight ];
		var enws_deg_extent = [];
		if (!Array.isArray(mapCornerExtent)) { //TODO: ?? extract this to MapService
			north_edge = mapCornerExtent.getNorthEast().lat();
			south_edge = mapCornerExtent.getSouthWest().lat();
			east_edge  = mapCornerExtent.getNorthEast().lng();
			west_edge  = mapCornerExtent.getSouthWest().lng();
			enws_deg_extent = [
				mapCornerExtent.getNorthEast().lng(), // degX0 east_edge
				mapCornerExtent.getNorthEast().lat(), // degY0 north_edge
				mapCornerExtent.getSouthWest().lng(), // degX1 west_edge
				mapCornerExtent.getSouthWest().lat(), // degY1 south_edge
			];
		} else {
			enws_deg_extent = mapCornerExtent;
		}

		// map measure in degrees
		var e_mapsize = Math.abs(east_edge - west_edge);
		var n_mapsize = Math.abs(north_edge - south_edge);
		var en_mapsize = [e_mapsize, n_mapsize];

		// ratio pixels on map : degrees on map = px/dg
		var px_per_e = pixelWidth  / e_mapsize;
		var px_per_n = pixelHeight / n_mapsize;
		var px_per_en = [px_per_e, px_per_n];

		function pointJoin(pointCoordLngLat){
			var pt_e  = pointCoordLngLat[0]; // -122.26724295911637
			var pt_n = pointCoordLngLat[1]; //   37.483464075107776			
			// (en_pt_on_map) * K = new point
			var result = [
				 (pt_e - west_edge ) * px_per_e ,
			   pixelHeight - ((north_edge - pt_n) * px_per_n) ,
			].join(' ');

			return result;
		}
		// create a string with the proper start and end
		var wkt_string_from_points_array = [
      	pointJoin(pts[0]),
      	pointJoin(pts[1]),
      	pointJoin(pts[2]),
      	pointJoin(pts[3]),
      	pointJoin(pts[0]),
    ].join(', ');

    // add the right begin & end details
    wkt_string_from_points_array = "POLYGON((" + wkt_string_from_points_array + "))";

		feature_to_return = wkt.readFeature(wkt_string_from_points_array); //TODO: projection?
		var fCoord = feature_to_return.getGeometry().getCoordinates();

		return feature_to_return;
  };

  return PanelFillService;
}

angular.module('edliter').service('PanelFillService', PanelFillService_);  
